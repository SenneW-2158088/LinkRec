x-environment: &environment
  environment:
    # NODE_ENV: development
    BACKEND_PORT: 8080
    DATABASE_URL: "postgres://admin:admin@db:5432/linkrec_database"

x-postgres: &base-postgres
  image: postgres:latest
  container_name: linkrec_postgres
  environment:
    POSTGRES_USER: admin
    POSTGRES_PASSWORD: admin
    POSTGRES_DB: linkrec_database
  volumes:
    - pgdata:/var/lib/postgresql/data # Persist data
  networks:
    - internal

x-fuseki: &base-fuseki
  build:
    context: ./fuseki
  volumes:
    # - ./fuseki/fuseki-data:/fuseki
    - ./fuseki/staging:/staging
    - ./fuseki/fuseki-data:/fuseki
    # - fuseki-data:/jena-fuseki/databases
    # - ./jena-fuseki/configuration:/fuseki/configuration
    # - ./jena-fuseki/shiro.ini:/fuseki/shiro.ini
    # - ./jena-fuseki/config.ttl:/fuseki/config.ttl
  user: root:root
  networks:
    - internal
  environment:
    - ADMIN_PASSWORD=admin
    # - FUSEKI_DATASET_1=linkrec
    # - FUSEKI_DATASET_2=test
  command: bash -c "
    ./load.sh linkrec
    && /jena-fuseki/fuseki-server
    "

x-backend: &base-backend
  networks:
    - internal
  ports:
    - 8080:8080

services:
  fuseki-dev:
    <<: *base-fuseki
    ports:
      - 3030:3030

  db:
    <<: *base-postgres
    ports:
      - "5432:5432"

  backend-dev:
    <<: [*base-backend, *environment]
    build:
      context: ./link-rec
      target: development
    depends_on:
      - db
      - fuseki-dev
    volumes:
      - ./link-rec/apps/backend/src:/app/apps/backend/src
      - /app/node_modules

  fuseki-prod:
    <<: *base-fuseki

  backend-prod:
    <<: [*base-backend, *environment]
    build:
      context: ./link-rec
      target: production

  # frontend:
  #   build: ./link-rec/apps/frontend
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - backend
  #   networks:
  #     - internal-network
  #     - public-network

networks:
  internal:
    driver: bridge
  public: {}

volumes:
  fuseki-data:
  pgdata:
